all_files
s5.sh
section2
section3
section4
section6
section7
section8
section9
File name is cat_files.sh
#!/bin/bash

# cat all files in the current folder

FILE_ALL="/home/andrii/repositories/shell_scripting/all_files"
FILES=$(ls)

echo "$FILES"

for FILE in $FILES
do
#	echo "----------------------------------------------"
	echo "File name is $FILE" >> $FILE_ALL
	cat $FILE >> $FILE_ALL
	echo "----------------------------------------------" >> $FILE_ALL
done
----------------------------------------------
File name is continue.sh
#!/bin/bash

VAR=0

while [ "$VAR" -lt "5" ]
do
	((VAR++))
	if [ "$VAR" -eq 2 ]
	then
		continue # restarts the loop
	fi
	echo "$VAR"
done	
----------------------------------------------
File name is ping_o
PING google.com (216.58.215.78) 56(84) bytes of data.
64 bytes from waw02s16-in-f14.1e100.net (216.58.215.78): icmp_seq=1 ttl=56 time=40.8 ms

--- google.com ping statistics ---
xfs 1 packets transmitted, 1 received, 0% packet loss, time 0ms
xfs rtt min/avg/max/mdev = 40.823/40.823/40.823/0.000 ms
----------------------------------------------
File name is read_file.sh
#!/bin/bash

LINE_NUM=1

while read LINE
do
	echo "${LINE_NUM}: ${LINE}"
	((LINE_NUM++))
done < ./s1.sh
----------------------------------------------
File name is read_file2.sh
#!/bin/bash

#LINE_NUM=1

while read VAR
do
	echo "${VAR}"
#	((LINE_NUM++))
done < ./s1.sh
----------------------------------------------
File name is read_grep.sh
#!/bin/bash

grep xfs ./ping_o | while read LINE
do
	echo "xfs: ${LINE}"
done
----------------------------------------------
File name is read_grep2.sh
#!/bin/bash

LINE_NUM=1
grep xfs ./ping_o | while read VAR1 VAR2 VAR3 REST
do
	echo "${LINE_NUM}: ${VAR1}"
	echo "${LINE_NUM}: ${VAR2}"
	echo "${LINE_NUM}: ${VAR3}"
	echo "${LINE_NUM}: ${REST}"
	((LINE_NUM++))
done
----------------------------------------------
File name is s1.sh
#!/bin/bash

INDEX=1

while [ "$INDEX" -le "5" ]
do
	echo "$INDEX"
	((INDEX++))
done
----------------------------------------------
File name is s2.sh
#!/bin/bash

while [ "$ANSWER" != "y" ] # Question - can I use wildcards here?
do
	read -p "Type your name: " NAME
	read -p "Your name is ${NAME}: " ANSWER
done
----------------------------------------------
